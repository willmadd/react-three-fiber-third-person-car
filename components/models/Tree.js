/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useBox } from "@react-three/cannon";

export function Tree(props) {
console.log('><><',props.position)
  const [ref] = useBox(() => ({ type: 'Static', position: props.position, args: [1.5, 5, 1.5] }))

  const { nodes, materials } = useGLTF('/models/tree.glb')
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials.Trunk} />
      <mesh geometry={nodes.Icosphere.geometry} material={materials['Material.001']} position={[-0.4, 6.45, -1.38]} rotation={[0.24, 0.15, -0.31]} />
      <mesh geometry={nodes.Icosphere001.geometry} material={materials['Material.001']} position={[-2.17, 5.14, -2.3]} rotation={[0.27, 0.16, -0.34]} scale={0.76} />
      <mesh geometry={nodes.Icosphere002.geometry} material={materials['Material.001']} position={[-2.73, 4.82, -0.15]} rotation={[0.18, 0.63, 0.15]} />
      <mesh geometry={nodes.Icosphere003.geometry} material={materials['Material.001']} position={[1.03, 4.99, -0.08]} rotation={[0.37, 0.06, -0.26]} scale={1.35} />
      <mesh geometry={nodes.Icosphere004.geometry} material={materials['Material.001']} position={[-0.44, 5.12, 1.18]} rotation={[0, -0.19, -0.35]} />
      <mesh geometry={nodes.Icosphere005.geometry} material={materials['Material.001']} position={[0.17, 6.17, -0.22]} rotation={[0.4, 0.25, 0.05]} scale={0.76} />
    </group>
  )
}

useGLTF.preload('/models/tree.glb')
