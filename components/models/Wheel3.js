/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import React, { forwardRef, useRef } from "react";
import { useCylinder } from "@react-three/cannon";

export const Wheel = forwardRef(({ radius = 0.7, leftSide, ...props }, ref) => {
  const { nodes, materials } = useGLTF('/models/wheel3.glb')
console.log('radius', props)
  useCylinder(
    () => ({
      mass: 5,
      type: "Kinematic",
      material: "wheel",
      collisionFilterGroup: 0,
      args: [radius, radius, 0.5, 16],
      ...props,
    }),
    ref 
  );
  return (
    <mesh ref={ref}>
    <group {...props} dispose={null}
    //  position-x={leftSide?-1:1}
     >
      <group  rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}>
        <mesh geometry={nodes.Cylinder005.geometry} material={materials.Tyre} />
        <mesh geometry={nodes.Cylinder005_1.geometry} material={materials.Chrome} />
      </group>
    </group>
    </mesh>
  )
})

useGLTF.preload('/models/wheel3.glb')
