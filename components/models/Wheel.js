/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { forwardRef, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useCylinder } from "@react-three/cannon";

export const Wheel = forwardRef(({ radius = 10, leftSide, ...props }, ref) => {
  const { nodes, materials } = useGLTF("/models/wheel.glb");

  useCylinder(
    () => ({
      mass: 1,
      type: "Kinematic",
      material: "wheel",
      collisionFilterGroup: 0,
      args: [radius, radius, 0.5, 16],
      ...props,
    }),
    ref
  );

  return (
    <mesh ref={ref}>

 
    <group {...props} dispose={null}>
      <group
        position={[1.64, -0.45, 1.59]}
       rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}
        scale={[0.47, 0.15, 0.47]}
      >
        <mesh geometry={nodes.Cylinder005.geometry} material={materials.Tyre} />
        <mesh
          geometry={nodes.Cylinder005_1.geometry}
          material={materials.Chrome}
        />
      </group>
    </group>
    </mesh>
  );
});
useGLTF.preload("/models/wheel.glb");
